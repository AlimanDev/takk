# Generated by Django 3.2.2 on 2021-05-20 14:13

import apps.users.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile_os', models.PositiveSmallIntegerField(choices=[('unknown', 'Unknown'), ('android', 'Android'), ('ios', 'IOS')], null=True, verbose_name='mobile os')),
                ('username', models.CharField(max_length=50, null=True, verbose_name='Name')),
                ('phone', models.CharField(max_length=20, unique=True, verbose_name='Phone number')),
                ('sms_code', models.IntegerField(blank=True, null=True, verbose_name='SMS code')),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'Company owner'), (2, 'Employee'), (3, 'User')], default=3, verbose_name='User type')),
                ('phone_is_verified', models.BooleanField(default=False, verbose_name='Phone verified')),
                ('date_of_birthday', models.DateField(blank=True, null=True, verbose_name='Date of birthday')),
                ('avatar', models.ImageField(null=True, upload_to='users/avatar', verbose_name='Avatar')),
                ('referral_code', models.CharField(max_length=60, null=True, verbose_name='Referral code')),
                ('cashback', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Cashback')),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Balance')),
                ('auto_fill', models.BooleanField(default=False, verbose_name='Auto fill')),
                ('auto_fill_min_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Auto fill min balance')),
                ('batch_payment', models.BooleanField(default=False)),
                ('stripe_card_id', models.CharField(blank=True, max_length=250, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'users',
            },
            managers=[
                ('objects', apps.users.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BudgetTariff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_payout', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount of payout')),
                ('amount_receipt', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount of receipt')),
                ('percent', models.PositiveSmallIntegerField(default=0, verbose_name='Per—Åent')),
            ],
            options={
                'verbose_name': 'Tariff',
                'verbose_name_plural': 'Tariffs',
                'db_table': 'budget_tariffs',
            },
        ),
        migrations.CreateModel(
            name='InvitedUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('given_free_item', models.BooleanField(default=True)),
                ('inviter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invited', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Invited User',
                'verbose_name_plural': 'Invited Users',
                'db_table': 'invited_users',
            },
        ),
        migrations.CreateModel(
            name='CashbackHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cashback_histories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cashback History',
                'verbose_name_plural': 'Cashback Histories',
                'db_table': 'user_cashback_history',
            },
        ),
        migrations.CreateModel(
            name='BudgetFillHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fill_date', models.DateTimeField(auto_now_add=True, verbose_name='Last fill date')),
                ('amount_payout', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount of payout')),
                ('amount_receipt', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount of receipt')),
                ('tariff', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.budgettariff', verbose_name='Tariff')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fill_histories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Fill History',
                'verbose_name_plural': 'Fill Histories',
                'db_table': 'budget_fill_history',
            },
        ),
    ]
